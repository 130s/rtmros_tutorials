<launch>
  <arg name="SPINDLE" default="true" />
  <arg name="SPINDLE_SPEED" default="1.00" />
  <arg name="STEREO_TO_POINTCLOUD" default="true" />
  <arg name="LIDAR_TO_POINTCLOUD" default="true" />

  <arg name="namespace" value="multisense" />

  <arg name="not_use_sensor_tf_prefix" default="true" />
  <arg name="fixed_frame_id" default="head" />

  <group ns="multisense/camera" if="$(arg STEREO_TO_POINTCLOUD)">
    <node name="multisense_stereo_nodelet" pkg="nodelet" type="nodelet" args="manager"/>
    <node name="multisense_stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc">
      <param name="disparity_range" value="128" />
    </node>
  </group>

  <node name="laser_scan_intensity_filter"
        pkg="hrpsys_gazebo_general" type="laser_scan_intensity_filter"
        if="$(arg LIDAR_TO_POINTCLOUD)">
    <remap from="input" to="/multisense/lidar_scan" />
    <remap from="output" to="/multisense_intensity_filtered/lidar_scan" />
  </node>
  <group ns="multisense_intensity_filtered"
         if="$(arg LIDAR_TO_POINTCLOUD)">
    <node name="tilt_scan_to_scan"
          pkg="laser_filters" type="scan_to_scan_filter_chain"
          output="screen">
      <remap from="scan" to="lidar_scan" />
      <rosparam subst_value="true">
        scan_filter_chain:
        - name: shadows
          type: laser_filters/ScanShadowsFilter
          params:
            min_angle: 0
            max_angle: 175
            neighbors: 5
            window: 5
        - name: dark_shadows
          type: LaserScanIntensityFilter
          params: 
            lower_threshold: 200
            upper_threshold: 10000
            disp_histogram: 0
        - name: range
          type: laser_filters/LaserScanRangeFilter
          params:
            lower_threshold: 0.2 # 0.5
            upper_threshold: 30
      </rosparam>
      <remap from="scan_filtered" to="/multisense/lidar_scan_filtered" />
    </node>
  </group>
  <node name="tilt_scan_to_cloud"
        pkg="laser_filters" type="scan_to_cloud_filter_chain"
        output="screen"
        if="$(arg LIDAR_TO_POINTCLOUD)">
    <remap from="scan" to="/multisense/lidar_scan_filtered" />
    <rosparam>
      high_fidelity: true
    </rosparam>
    <param name="target_frame" value="head_hokuyo_frame" unless="$(arg not_use_sensor_tf_prefix)"/>
    <param name="target_frame" value="head_hokuyo_frame" if="$(arg not_use_sensor_tf_prefix)"/>
    <remap from="cloud_filtered" to="/multisense/lidar_scan_cloud_filtered" />
  </node>

  <node pkg="nodelet" type="nodelet" name="multisense_laser_manager"
        args="manager" output="screen"/>

  <node pkg="nodelet" type="nodelet"
        name="laser_x_filter"
        args="load pcl/PassThrough multisense_laser_manager">
    <remap from="~input" to="tilt_laser_listener/output_cloud" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -5.0
      filter_limit_max: 5.0
    </rosparam>
  </node>
  <node pkg="nodelet" type="nodelet"
        name="laser_y_filter"
        args="load pcl/PassThrough multisense_laser_manager">
    <remap from="~input" to="laser_x_filter/output" />
    <rosparam>
      filter_field_name: y
      filter_limit_min: -5.0
      filter_limit_max: 5.0
    </rosparam>
  </node>
  <node pkg="nodelet" type="nodelet"
        name="laser_z_filter"
        args="load pcl/PassThrough multisense_laser_manager">
    <remap from="~input" to="laser_y_filter/output" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -5.0
      filter_limit_max: 5.0
    </rosparam>
  </node>
  
  <node pkg="nodelet" type="nodelet"
        name="laser_downsampler"
        args="load pcl/VoxelGrid multisense_laser_manager">
    <remap from="~input" to="laser_z_filter/output" />
    <rosparam>
      leaf_size: 0.01
      filter_limit_min: -100
      filter_limit_max: 100
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet"
        name="laser_camera_cloud"
        args="load jsk_pcl/TfTransformCloud multisense_laser_manager">
    <remap from="~input" to="laser_downsampler/output" />
    <param name="target_frame_id" value="multisense/left_camera_optical_frame"
           unless="$(arg not_use_sensor_tf_prefix)"/>
    <param name="target_frame_id" value="left_camera_optical_frame"
           if="$(arg not_use_sensor_tf_prefix)"/>
  </node>

    
  <node pkg="nodelet" type="nodelet"
        name="tilt_laser_listener"
        args="load jsk_pcl/TiltLaserListener multisense_laser_manager"
        output="screen">
    <remap from="~input" to="/$(arg namespace)/joint_states" />
    <rosparam>
#      laser_type: infinite_spindle_half
      laser_type: infinite_spindle
      joint_name: hokuyo_joint
      use_laser_assembler: true
      overwrap_angle: 0.0
    </rosparam>
    <remap from="~assemble_scans2" to="/assemble_scans2" />
  </node>
  
  <!-- for backward compatibility -->
  <node pkg="nodelet" type="nodelet"
        name="multisense_laser_relay"
        args="load jsk_topic_tools/Relay multisense_laser_manager">
    <remap from="~input" to="tilt_laser_listener/output_cloud" />
    <remap from="~output" to="/full_cloud2" />
  </node>
  <!-- full_cloud2 -->
  <node pkg="laser_assembler" type="laser_scan_assembler"
        name="laser_scan_assembler_node"
        output="screen" >
    <remap from="scan" to="/multisense/lidar_scan_filtered"/>
    <param name="tf_cache_time_secs" value="20" />
    <param name="max_scans" type="int" value="1000" />
    <param name="fixed_frame" type="string" value="multisense/$(arg fixed_frame_id)" unless="$(arg not_use_sensor_tf_prefix)"/>
    <param name="fixed_frame" type="string" value="$(arg fixed_frame_id)" if="$(arg not_use_sensor_tf_prefix)"/>
  </node>


  <node name="hokuyo_joint_states_relay"
        pkg="topic_tools" type="relay"
        args="/$(arg namespace)/joint_states /joint_states" />
  <node name="hokuyo_spindle_speed_setter"
        pkg="rostopic" type="rostopic"
        args="pub -l /$(arg namespace)/set_spindle_speed std_msgs/Float64 'data: $(arg SPINDLE_SPEED)'"
        if="$(arg SPINDLE)"/>
</launch>
